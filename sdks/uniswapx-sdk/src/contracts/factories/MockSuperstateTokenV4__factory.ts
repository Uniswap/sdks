/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockSuperstateTokenV4,
  MockSuperstateTokenV4Interface,
} from "../MockSuperstateTokenV4";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setIsAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061029e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063babcc5391461003b578063c2b7c5fc1461006b575b600080fd5b61005560048036038101906100509190610199565b610087565b60405161006291906101e1565b60405180910390f35b61008560048036038101906100809190610228565b6100dc565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101668261013b565b9050919050565b6101768161015b565b811461018157600080fd5b50565b6000813590506101938161016d565b92915050565b6000602082840312156101af576101ae610136565b5b60006101bd84828501610184565b91505092915050565b60008115159050919050565b6101db816101c6565b82525050565b60006020820190506101f660008301846101d2565b92915050565b610205816101c6565b811461021057600080fd5b50565b600081359050610222816101fc565b92915050565b6000806040838503121561023f5761023e610136565b5b600061024d85828601610184565b925050602061025e85828601610213565b915050925092905056fea264697066735822122091293298b8d47f87b894ec1112c21a94c2b5a1e71f2acbbf6529d1795b2f275f64736f6c63430008100033";

type MockSuperstateTokenV4ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSuperstateTokenV4ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSuperstateTokenV4__factory extends ContractFactory {
  constructor(...args: MockSuperstateTokenV4ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockSuperstateTokenV4> {
    return super.deploy(overrides || {}) as Promise<MockSuperstateTokenV4>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockSuperstateTokenV4 {
    return super.attach(address) as MockSuperstateTokenV4;
  }
  override connect(signer: Signer): MockSuperstateTokenV4__factory {
    return super.connect(signer) as MockSuperstateTokenV4__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSuperstateTokenV4Interface {
    return new utils.Interface(_abi) as MockSuperstateTokenV4Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSuperstateTokenV4 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockSuperstateTokenV4;
  }
}
